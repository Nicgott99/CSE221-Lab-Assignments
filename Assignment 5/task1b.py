# -*- coding: utf-8 -*-
"""task1b.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1WLTp90OjlaDO2ylmgj4DbU4tuDrtOPCe
"""

#Name: Md Hasib Ullah Khan Alvie
#Section: 23
#Student ID: 22101371

file_in = open('input1b.txt','r')
file_out = open('output1b.txt','w')
vertices, edges = list(map(int,file_in.readline().split(' ')))
path = file_in.read().split('\n')
graph = [[] for i in range(vertices+1) ]
trans_graph = [[] for i in range(vertices+1)]
scc_container = []
file_in.close()

def creating_graph(graph, trans_graph, path):
    for i in path:
            u, v = list(map(int, i.split(' ')))
            graph[u].append(v)
            trans_graph[v].append(u)

def dfs(d, visited_vertex, stack, graph):
    visited_vertex[d] = True
    if graph[d] != []:
        for i in graph[d]:
            if not visited_vertex[i]:
                dfs(i, visited_vertex, stack, graph)
    stack.append(d)

def SCC(vertices, graph, trans_graph, scc_container):
    stack = []
    new_stack = []
    visited_vertex = [False] * (vertices+1)

    for i in range(1, vertices+1):
        if not visited_vertex[i]:
            dfs(i, visited_vertex, stack, graph)

    visited_vertex = [False] * (vertices+1)
    while stack:
        i = stack.pop()
        if visited_vertex[i] == False:
            dfs(i, visited_vertex, new_stack, trans_graph)
            scc_container.append(sorted(new_stack))
            new_stack = []

creating_graph(graph, trans_graph, path)
SCC(vertices, graph, trans_graph, scc_container)
for i in sorted(scc_container):
    file_out.write(' '.join(map(str,i)) + '\n')
file_out.close()

