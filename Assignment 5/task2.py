# -*- coding: utf-8 -*-
"""task2.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/18sAJDT0VRGJzUgjleCujeuW6Xy3Wn-9s
"""

#Name: Md Hasib Ullah Khan Alvie
#Section: 23
#Student ID: 22101371

file_in = open('input2.txt','r')
file_out = open('output2.txt','w')
vertices, edges = list(map(int,file_in.readline().split(' ')))
path = file_in.read().split('\n')
graph = {}

def creating_graph(graph, path):
    for i in path:
        u, v = list(map(int, i.split(' ')))
        if u not in graph:
            graph[u] = [v]
        else:
            graph[u].append(v)

def topologicalSortBFS(graph,vertices):
    in_degree = [0]*(vertices)
    queue = []
    count = 0
    top_order = []

    for i in graph:
        for j in graph[i]:
            in_degree[j] += 1

    for i in range(1,vertices):
        if in_degree[i] == 0:
            queue.append(i)

    while queue:
        u = queue.pop(0)
        top_order.append(u)
        if u in graph.keys():
            for i in graph[u]:
                in_degree[i] -= 1
                if in_degree[i] == 0:
                    queue.append(i)
        count += 1

    if count != vertices-1:
        file_out.write('IMPOSSIBLE')
    else :
        file_out.write(' '.join(map(str,top_order)))
creating_graph(graph,path)
topologicalSortBFS(graph,vertices+1)
file_out.close()

