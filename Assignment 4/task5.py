# -*- coding: utf-8 -*-
"""task5.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1HqI3LWU6ai3dYfYfMwqAW4jkbDksR-R_
"""

#Name: Md Hasib Ullah Khan Alvie
#Section : 23
#Student ID: 22101371

input_file = open('input5.txt', 'r')
output_file = open('output5.txt', 'w')

v, e, d = list(map(int, input_file.readline().strip().split()))

vis = [0 for i in range(v+1)]
lvl = [0 for y in range(v+1)]
parent = [0 for z in range(v+1)]

adj_list = [[]for i in range(v+1)]

for i in range(e):
    f, t = list(map(int, input_file.readline().strip().split()))
    adj_list[f].append(t)
    adj_list[t].append(f)

def BFS_Traversal(adj_list, source):
    queue = []
    queue.append(source)
    vis[source] = 1
    lvl[source] = 0
    parent[source] = source

    while queue:
        temp = queue.pop(0)

        for x in adj_list[temp]:

            if vis[x] == 0:
                vis[x] = 1
                lvl[x] = lvl[temp] + 1
                parent[x] = temp
                queue.append(x)

            if x == d:
                break

source = 1
BFS_Traversal(adj_list, source)

print(f"Time : {lvl[d]}", file=output_file)


answer = []
while True:
    answer.append(d)
    if d == source:
        break
    d = parent[d]

answer.reverse()
print("Shortest Path: ", end="", file=output_file)
for x in answer:
    print(x, end = " ", file=output_file)


input_file.close()
output_file.close()