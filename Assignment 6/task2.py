# -*- coding: utf-8 -*-
"""task2.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1Hd1HsJXdU9cLRzLVoA5hsBruJDtupA5H
"""

#Name: Md Hasib Ullah Khan Alvie
#Section: 23
#Student ID: 22101371


with open('output2.txt', 'w') as out_s:
  with open('input2.txt') as inp_s:
    def dijkstra(source, n, m, l, visited, d):
      d[source] = 0
      for i in range(n):
        sNode = -1
        for j in range(1, n+1):
          if visited[j] == 1:
            continue
          if(sNode == -1 or d[sNode] > d[j]):
            sNode = j
        visited[sNode] = 1

        for adj in l[sNode]:
          aNode, edge = adj
          if d[sNode] + edge < d[aNode]:
            d[aNode] = d[sNode] + edge

    v1,e= map(int, inp_s.readline().split())

    list1 = [[] for i in range(v1+1)]
    visited = [0] * (v1+1)
    dic1= [100000000] * (v1+1)

    for i in range(e):
      u,v,w = map(int, inp_s.readline().split())
      list1[u].append((v,w))
    source,source2 = map(int, inp_s.readline().split())
    dijkstra(source, v, e, list1, visited, dic1)

    visited1 = [0] * (v1+1)
    dic2 = [100000000] * (v1+1)

    dijkstra(source2, v1, e, list1, visited1, dic2)

    v_time = 100000000
    time = 100000000
    node = None

    for i in range(1, v1+1):
      res = dic1[i] + dic2[i]
      if res < time:
        v_time = res
        time = max(dic1[i], dic2[i])
        node = i

    if node == None:
      print("Impossible", file = out_s)
    else:
      print(f"Time {time}", file = out_s)
      print(f"Node {node}", file = out_s)